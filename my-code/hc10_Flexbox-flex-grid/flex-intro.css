* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* ! onemli olan hizalanmak istenenleri containere almamiz lazm ve flex yaptiktan sonra diger elemenler islevsellik kazanir */

/* ? row- yan yana dizer / colum alt alta dizer kutulari butonlari  */

/* * flex wrap propertisi no wrap containerin icersindeki elementler ekran ile birlikte sigmayanlar asagi iner Responsiv tasarim icn onemli bir ozellik- default degeri nowrap dir . acilmali flex-wrap ile*/

/* !gap ozelligi onemli bosluk birakabilirz */

/* * justifey-content elementleri yatayda hizalamak icindir.Default degeri flex-start dir */

/* ? justify content yatay hizalama yapiyor */

/* ? (align-items) propertisi dikey hizalama yapar containerde div icerisindeki divleri */

/* ! defoult degeri strech dir (strech) uzatir dikye / (flex-end )tabana center ortaya (baseline) yazilarin tabanina gore hizalar (flex-start )yukarida hizalar */

ul.nav {
  background-color: aqua;
  list-style: none;
  padding: 1rem;
  height: 15rem;

  /*? Flex ozellgini aktif hale getirdik */
  display: flex;
  /* *Defoult direk row o yuzden direk yan yana dizer */
  flex-direction: row;

  /* ! colum direk tekrar dikye yapar  [colum reverse yazilarn basliklarin sondan baslatir]*/

  /*? Satirlar arasi bosluk, ilk verilen satirlar arasi, 2. verilen sutunlar arasi bsoluktur */
  gap: 1rem;

  /* * gap ilk satirlar arasi ikincisi sutunlar arasi boslugu ayarlar */

  /*? sikistirma veya alt satira gecebilme:flex-wrap: wrap, nowrap, wrap-reverse*/
  flex-wrap: wrap;
  /* ? wrap ekran kuculdugunde kutulari asagi indirir */

  justify-content: center;

  align-items: center;
  align-content: flex-start;
  /* ! {align contetn}t kullanmak daha mantikli wrap aciksa bir grup olarak hareket etmesini istiyorsak blok olarak hareket ediyorlar */

  /* ! dikey hizalamada strech  */
}

ul.nav li {
  background-color: chartreuse;
  width: 7rem;
  padding: 0.5rem;
  text-align: center;
  border-radius: 5px;
  /* margin-bottom: 1rem; verilebilir.
 */
}

/* ?( align content )ozellikle multi line dedigimiz cok satirli iceriklerin hizalanmasinda kullanilir */

.container {
  margin-top: 2rem;
  background-color: green;
  padding: 1rem;
  color: white;
  font-size: 1.2rem;

  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
}
/* ! container icerisindeki tum elementleri * ile degistirirz */
.container * {
  background-color: red;
}

/* * item seviyesinde ayar yapariz grow ve basis */
/* ? 3 unu birlestiren kullanimi vardir 1 2 3 seklinde */
/* ? flex grow  - nesnelerin buyume oranlarini belirler - itemlara verilir - toptan verilmez- kendi claslarina itemlara vermek lazm */

/* ! flex- shrink item in ne sekilde kuculecegini veriyoruz. mevcut durma gore belirlenir. */

/* ! flex- basis itemin belli buyuklugu olsun ve onun uzerine buyuyup kuculsun */

.container header {
  /* flex-grow: 2; */
  /* ! flex basis bir itemein kapladigi ve kaplayacagi uzunlugu belirler  % rem px gibi degerler alabilir */

  /* ! flex grow bir itemin digerlerine gore buyume oranini belirler 2 2 kat buyu demektir. */

  /* ! flex grow 0 ise item buyumez */
  flex-basis: 100%;
  flex: 1 100%;
  /* * ikili kullanim birincisi grow ikincisi basis */
}

.container footer {
  flex-basis: 100%;
}

.container main {
  flex-grow: 3;
  flex: 3;
  /* * flex grow 3 basis 0 vermis oluyoruz defoult olarak */
}

.container .left {
  flex-grow: 1;
}

.container .right {
  flex-grow: 2;
}
